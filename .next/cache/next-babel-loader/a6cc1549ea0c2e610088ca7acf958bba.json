{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ClientRouter from '../components/ClientRouter';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  }\n});\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(ClientRouter, null), __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, pageProps)))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/workspace/MERNstack/sample-embedded-app/pages/_app.js"],"names":["App","Head","AppProvider","Provider","translations","Cookies","ClientRouter","ApolloClient","ApolloProvider","client","fetchOptions","credentials","MyApp","render","Component","pageProps","props","config","apiKey","API_KEY","shopOrigin","get","forceRedirect"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD;AADgB,CAAjB,CAAf;;AAMA,MAAMC,KAAN,SAAoBZ,GAApB,CAAwB;AACtBa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACH,UAAMC,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAEC,OAAV;AAAmBC,MAAAA,UAAU,EAAEf,OAAO,CAACgB,GAAR,CAAY,YAAZ,CAA/B;AAA0DC,MAAAA,aAAa,EAAE;AAAzE,KAAf;AACG,WACE,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,IAAD,QACE,kCADF,EAEE;AAAM,MAAA,OAAO,EAAC;AAAd,MAFF,CADF,EAKH,MAAC,QAAD;AAAU,MAAA,MAAM,EAAEL;AAAlB,OACE,MAAC,YAAD,OADF,EAEE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAEb;AAAnB,OACD,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEK;AAAxB,OACE,MAAC,SAAD,EAAeM,SAAf,CADF,CADC,CAFF,CALG,CADF;AAgBD;;AApBqB;;AAuBxB,eAAeH,KAAf","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ClientRouter from '../components/ClientRouter';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n});\n\nclass MyApp extends App {\n  render() {\n    const { Component, pageProps } = this.props;\n\tconst config = { apiKey: API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true };\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Sample App</title>\n          <meta charSet=\"utf-8\" />\n        </Head>\n\t\t\t<Provider config={config}>\n\t\t\t  <ClientRouter />\n\t\t\t  <AppProvider i18n={translations}>\n\t\t\t\t<ApolloProvider client={client}>\n\t\t\t\t  <Component {...pageProps} />\n\t\t\t\t</ApolloProvider>\n\t\t\t  </AppProvider>\n\t\t\t</Provider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}